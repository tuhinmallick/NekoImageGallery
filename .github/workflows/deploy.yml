name: Deploy to Google Cloud Run

on:
  push:
    tags:
      - 'v*'  # Trigger the workflow only on version tags (e.g., v1.0.0)
  workflow_dispatch:  # Allows manual triggering of the workflow

permissions:
  contents: read
  id-token: write

env:
  SERVICE_NAME: styleguru-api
  GCP_REGION: europe-west3   # Define your region here
  GCP_PROJECT_ID: julie-grace-api
  # Non-sensitive Environment Variables
  APP_QDRANT__MODE: server
  APP_QDRANT__HOST: 2b5b515d-1707-41d6-8f9e-8b3a9bc5d053.europe-west3-0.gcp.cloud.qdrant.io
  APP_QDRANT__PORT: '6333'
  APP_QDRANT__GRPC_PORT: '6334'
  APP_QDRANT__PREFER_GRPC: 'True'
  APP_QDRANT__COLL: NekoImg
  APP_DEVICE: auto
  APP_CORS_ORIGINS: '["*"]'
  APP_MODEL__CLIP: patrickjohncyh/fashion-clip
  APP_MODEL__BERT: bert-base-uncased
  APP_MODEL__EASYPADDLEOCR: ''
  APP_OCR_SEARCH__ENABLE: 'True'
  APP_OCR_SEARCH__OCR_MODULE: easypaddleocr
  APP_OCR_SEARCH__OCR_MIN_CONFIDENCE: '1e-2'
  APP_OCR_SEARCH__OCR_LANGUAGE: '["en"]'
  APP_ADMIN_API_ENABLE: 'True'
  APP_ADMIN_TOKEN: test
  APP_ADMIN_INDEX_QUEUE_MAX_LENGTH: '200'
  APP_ACCESS_PROTECTED: 'True'
  APP_ACCESS_TOKEN: test
  APP_STORAGE__METHOD: s3
  APP_STORAGE__S3__BUCKET: NekoImageGallery
  APP_STORAGE__S3__PATH: ./static
  APP_STORAGE__S3__REGION: eu-central-003
  APP_STORAGE__S3__ENDPOINT_URL: https://s3.eu-central-003.backblazeb2.com

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build disk space
        uses: jlumbroso/free-disk-space@main  # Free up disk space for larger builds

      - name: Checkout code
        uses: actions/checkout@v4  # Checkout the repository

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_CREDENTIALS }}'  # GCP credentials stored as a secret

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: '${{ env.GCP_PROJECT_ID }}'

      - name: Pull the latest image
        run: docker pull tuhinmallick/neko-image-gallery:latest-cuda12.1  # Pull the pre-built image from DockerHub

      - name: Deploy to Cloud Run with environment variables
        run: |
          gcloud run deploy "${{ env.SERVICE_NAME }}" \
            --image=tuhinmallick/neko-image-gallery:latest-cuda12.1 \
            --region="${{ env.GCP_REGION }}" \
            --platform=managed \
            --allow-unauthenticated \
            --cpu=4 \
            --memory=16Gi \
            --max-instances=50 \
            --set-env-vars=\
PROJECT_ID=${{ env.GCP_PROJECT_ID }},\
APP_QDRANT__API_KEY=${{ secrets.APP_QDRANT__API_KEY }},\
APP_STORAGE__S3__ACCESS_KEY_ID=${{ secrets.APP_STORAGE__S3__ACCESS_KEY_ID }},\
APP_STORAGE__S3__SECRET_ACCESS_KEY=${{ secrets.APP_STORAGE__S3__SECRET_ACCESS_KEY }},\
APP_QDRANT__MODE=${{ env.APP_QDRANT__MODE }},\
APP_QDRANT__HOST=${{ env.APP_QDRANT__HOST }},\
APP_QDRANT__PORT=${{ env.APP_QDRANT__PORT }},\
APP_QDRANT__GRPC_PORT=${{ env.APP_QDRANT__GRPC_PORT }},\
APP_QDRANT__PREFER_GRPC=${{ env.APP_QDRANT__PREFER_GRPC }},\
APP_QDRANT__COLL=${{ env.APP_QDRANT__COLL }},\
APP_DEVICE=${{ env.APP_DEVICE }},\
APP_CORS_ORIGINS=${{ env.APP_CORS_ORIGINS }},\
APP_MODEL__CLIP=${{ env.APP_MODEL__CLIP }},\
APP_MODEL__BERT=${{ env.APP_MODEL__BERT }},\
APP_MODEL__EASYPADDLEOCR=${{ env.APP_MODEL__EASYPADDLEOCR }},\
APP_OCR_SEARCH__ENABLE=${{ env.APP_OCR_SEARCH__ENABLE }},\
APP_OCR_SEARCH__OCR_MODULE=${{ env.APP_OCR_SEARCH__OCR_MODULE }},\
APP_OCR_SEARCH__OCR_MIN_CONFIDENCE=${{ env.APP_OCR_SEARCH__OCR_MIN_CONFIDENCE }},\
APP_OCR_SEARCH__OCR_LANGUAGE=${{ env.APP_OCR_SEARCH__OCR_LANGUAGE }},\
APP_ADMIN_API_ENABLE=${{ env.APP_ADMIN_API_ENABLE }},\
APP_ADMIN_TOKEN=${{ env.APP_ADMIN_TOKEN }},\
APP_ADMIN_INDEX_QUEUE_MAX_LENGTH=${{ env.APP_ADMIN_INDEX_QUEUE_MAX_LENGTH }},\
APP_ACCESS_PROTECTED=${{ env.APP_ACCESS_PROTECTED }},\
APP_ACCESS_TOKEN=${{ env.APP_ACCESS_TOKEN }},\
APP_STORAGE__METHOD=${{ env.APP_STORAGE__METHOD }},\
APP_STORAGE__S3__BUCKET=${{ env.APP_STORAGE__S3__BUCKET }},\
APP_STORAGE__S3__PATH=${{ env.APP_STORAGE__S3__PATH }},\
APP_STORAGE__S3__REGION=${{ env.APP_STORAGE__S3__REGION }},\
APP_STORAGE__S3__ENDPOINT_URL=${{ env.APP_STORAGE__S3__ENDPOINT_URL }} \
            --service-account=market-intel-api-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --timeout=3600s
